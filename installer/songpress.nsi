; Script generated by the HM NIS Edit Script Wizard.

; HM NIS Edit Wizard helper defines
!define PRODUCT_NAME "Songpress"
!define PRODUCT_VERSION "net"
!define PRODUCT_PUBLISHER "Luca Allulli - Skeed"
!define PRODUCT_WEB_SITE "http://www.skeed.it"
!define PRODUCT_DIR_REGKEY "Software\Microsoft\Windows\CurrentVersion\App Paths\songpress.exe"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!define PRODUCT_STARTMENU_REGVAL "NSIS:StartMenuDir"

SetCompressor lzma

; MUI 1.67 compatible ------
!include "MUI.nsh"
!include "FileAssociation.nsh"

; MUI Settings
!define MUI_ABORTWARNING
!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\modern-uninstall.ico"

; Language Selection Dialog Settings
!define MUI_LANGDLL_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_LANGDLL_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_LANGDLL_REGISTRY_VALUENAME "NSIS:Language"

; Welcome page
!insertmacro MUI_PAGE_WELCOME
; License page
!insertmacro MUI_PAGE_LICENSE "..\license.txt"
; Start menu page
var ICONS_GROUP
!define MUI_STARTMENUPAGE_DEFAULTFOLDER "Songpress"
!define MUI_STARTMENUPAGE_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME "${PRODUCT_STARTMENU_REGVAL}"
!insertmacro MUI_PAGE_STARTMENU Application $ICONS_GROUP
; Components
!insertmacro MUI_PAGE_COMPONENTS
; Instfiles page
!insertmacro MUI_PAGE_INSTFILES
; Finish page
!define MUI_FINISHPAGE_RUN "$PROFILE\.local\bin\songpress.exe"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_INSTFILES

; Language files
!insertmacro MUI_LANGUAGE "English"
!insertmacro MUI_LANGUAGE "Italian"

LangString UninstallAsk ${LANG_ENGLISH} "A previous version of Songpress was found. It is recommended that you uninstall it first. Do you want to do that now?"
LangString UninstallAsk ${LANG_ITALIAN} "E' presente una versione precedente di Songpress. Si consiglia di disinstallarla prima di continuare. Eseguire la disinstallazione ora?"
LangString UninstallPressOk ${LANG_ENGLISH} "Press OK to continue upgrading your version of Songpress"
LangString UninstallPressOk ${LANG_ITALIAN} "Premi OK per continuare l'aggiornamento di Songpress"

; === Language strings for pipx-based Songpress installer ===

; --- Python checks ---
LangString CheckingPython ${LANG_ENGLISH} "=== Checking for Python installation ==="
LangString CheckingPython ${LANG_ITALIAN} "=== Verifica presenza di Python ==="

LangString FoundPythonLauncher ${LANG_ENGLISH} "Found Python launcher (py.exe)"
LangString FoundPythonLauncher ${LANG_ITALIAN} "Trovato Python launcher (py.exe)"

LangString FoundPythonExe ${LANG_ENGLISH} "Found Python executable (python.exe)"
LangString FoundPythonExe ${LANG_ITALIAN} "Trovato Python (python.exe)"

LangString PythonNotFound ${LANG_ENGLISH} "Python not found."
LangString PythonNotFound ${LANG_ITALIAN} "Python non trovato."

LangString InstallingPython ${LANG_ENGLISH} "Installing Python from Microsoft Store..."
LangString InstallingPython ${LANG_ITALIAN} "Installazione Python dal Microsoft Store..."

LangString PythonInstallNotice ${LANG_ENGLISH} "Please install Python from the Store, then restart this installer."
LangString PythonInstallNotice ${LANG_ITALIAN} "Installa Python dallo Store, poi riavvia questo programma di installazione."

LangString PythonVersionCheck ${LANG_ENGLISH} "Checking Python version..."
LangString PythonVersionCheck ${LANG_ITALIAN} "Verifica versione di Python..."

LangString PythonVersionTooOld ${LANG_ENGLISH} "Python must be version 3.9 or newer."
LangString PythonVersionTooOld ${LANG_ITALIAN} "Python deve essere versione 3.9 o superiore."

LangString PythonVersionUnknown ${LANG_ENGLISH} "Unable to check Python version."
LangString PythonVersionUnknown ${LANG_ITALIAN} "Impossibile verificare la versione di Python."

; --- pipx checks ---
LangString CheckingPipx ${LANG_ENGLISH} "=== Checking for pipx ==="
LangString CheckingPipx ${LANG_ITALIAN} "=== Verifica presenza di pipx ==="

LangString InstallingPipx ${LANG_ENGLISH} "Installing pipx..."
LangString InstallingPipx ${LANG_ITALIAN} "Installazione di pipx..."

LangString PipxFound ${LANG_ENGLISH} "pipx is already installed."
LangString PipxFound ${LANG_ITALIAN} "pipx è già installato."

; --- Songpress install/update ---
LangString InstallingSongpress ${LANG_ENGLISH} "=== Installing Songpress ==="
LangString InstallingSongpress ${LANG_ITALIAN} "=== Installazione Songpress ==="

LangString SongpressUpdating ${LANG_ENGLISH} "Songpress already installed, updating..."
LangString SongpressUpdating ${LANG_ITALIAN} "Songpress già installato, aggiornamento in corso..."

LangString SongpressInstalling ${LANG_ENGLISH} "Downloading and installing Songpress. This operation may take several minutes..."
LangString SongpressInstalling ${LANG_ITALIAN} "Scaricamento e installazione di Songpress. Questa operazione può durare alcuni minuti..."

LangString SongpressDone ${LANG_ENGLISH} "Songpress installation complete."
LangString SongpressDone ${LANG_ITALIAN} "Installazione di Songpress completata."

; --- Uninstall ---
LangString UninstallSongpress ${LANG_ENGLISH} "=== Uninstalling Songpress (via pipx) ==="
LangString UninstallSongpress ${LANG_ITALIAN} "=== Disinstallazione Songpress (tramite pipx) ==="

LangString PipxNotFound ${LANG_ENGLISH} "pipx not found: skipping uninstall."
LangString PipxNotFound ${LANG_ITALIAN} "pipx non trovato: disinstallazione non necessaria."


; Reserve files
!insertmacro MUI_RESERVEFILE_INSTALLOPTIONS

; MUI end ------

Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "songpress-${PRODUCT_VERSION}-setup.exe"
InstallDir "$PROGRAMFILES\Songpress"
InstallDirRegKey HKLM "${PRODUCT_DIR_REGKEY}" ""
ShowInstDetails show
ShowUnInstDetails show
AutoCloseWindow false

; Global variables
Var PythonCmd
Var SongpressExe

; Installing Python + PIPX + Songpress
Function DoInstallPythonAndSongpress
  DetailPrint "$(CheckingPython)"

  ; Check if py exists
  nsExec::ExecToStack 'where py'
  Pop $0
  Pop $1

  ${If} $0 == "0"
    DetailPrint "$(FoundPythonLauncher)"
    
    StrCpy $PythonCmd "py -3"
  ${Else}
    ; If py is not present, try python
    nsExec::ExecToStack 'where python'
    Pop $0
    Pop $1
    ${If} $0 == "0"
      DetailPrint "$(FoundPythonExe): $1"
      StrCpy $PythonCmd "python"
    ${Else}
      DetailPrint "$(PythonNotFound)"
      DetailPrint "$(InstallingPython)"
      nsExec::ExecToLog 'powershell -Command "winget install -e --id Python.Python.3.13"'
      StrCpy $PythonCmd "py -3"
    ${EndIf}
  ${EndIf}

  ; Check python versione >= 3.9
  nsExec::ExecToStack '$PythonCmd -c "import sys; sys.exit(0 if sys.version_info>=(3,9) else 1)"'
  Pop $0
  ${If} $0 != "0"
    DetailPrint "$(PythonVersionTooOld)"
    DetailPrint "$(InstallingPython)"
    nsExec::ExecToLog 'powershell -Command "winget install -e --id Python.Python.3.13 --accept-source-agreements --accept-package-agreements"'
    StrCpy $PythonCmd "py -3"
  ${Else}
    DetailPrint "Python ok"
  ${EndIf}


  ; Check pipx
  DetailPrint "$(CheckingPipx)"
  nsExec::ExecToStack '$PythonCmd -m pip show pipx'
  Pop $0
  Pop $1
  ${If} $0 != "0"
    DetailPrint "$(InstallingPipx)"
    nsExec::ExecToLog '$PythonCmd -m pip install -U pipx'
    nsExec::ExecToLog '$PythonCmd -m pipx ensurepath'
  ${Else}
    DetailPrint "$(PipxFound)"
  ${EndIf}

  ; Install or update Songpress
  DetailPrint "$(InstallingSongpress)"
  nsExec::ExecToStack 'pipx list | findstr songpress'
  Pop $0
  ${If} $0 == "0"
    DetailPrint "$(SongpressUpdating)"
    nsExec::ExecToLog 'pipx update songpress'
  ${Else}
    DetailPrint "$(SongpressInstalling)"
    nsExec::ExecToLog 'pipx install songpress'
  ${EndIf}

  ; Find songpress path
  nsExec::ExecToStack 'where songpress'
  Pop $0
  Pop $SongpressExe
  DetailPrint "Songpress path: $SongpressExe"

  DetailPrint "$(SongpressDone)"
FunctionEnd

; Uninstall Songpress
Function un.DoUninstallSongpress
  DetailPrint "$(UninstallSongpress)"
  nsExec::ExecToStack 'where pipx'
  Pop $0
  Pop $1
  ${If} $0 == "0"
    nsExec::ExecToLog 'pipx uninstall songpress'
  ${Else}
    DetailPrint "$(PipxNotFound)"
  ${EndIf}
FunctionEnd

Function .onInit
  !insertmacro MUI_LANGDLL_DISPLAY
FunctionEnd

LangString SongpressSectionNameLS ${LANG_ENGLISH} "Songpress"
LangString SongpressSectionNameLS ${LANG_ITALIAN} "Songpress"
LangString DesktopSectionNameLS ${LANG_ENGLISH} "Desktop shortcut"
LangString DesktopSectionNameLS ${LANG_ITALIAN} "Icona sul Desktop"
LangString CrdSectionNameLS ${LANG_ENGLISH} "Associate CRD files"
LangString CrdSectionNameLS ${LANG_ITALIAN} "Associa i file CRD"
LangString ChoSectionNameLS ${LANG_ENGLISH} "Associate CHO files"
LangString ChoSectionNameLS ${LANG_ITALIAN} "Associa i file CHO"
LangString ChordproSectionNameLS ${LANG_ENGLISH} "Associate Chordpro files"
LangString ChordproSectionNameLS ${LANG_ITALIAN} "Associa i file Chordpro"
LangString ChoproSectionNameLS ${LANG_ENGLISH} "Associate Chopro files"
LangString ChoproSectionNameLS ${LANG_ITALIAN} "Associa i file Chopro"
LangString ProSectionNameLS ${LANG_ENGLISH} "Associate PRO files"
LangString ProSectionNameLS ${LANG_ITALIAN} "Associa i file PRO"
LangString TabSectionNameLS ${LANG_ENGLISH} "Associate TAB files"
LangString TabSectionNameLS ${LANG_ITALIAN} "Associa i file TAB"
LangString FileAssociationSG ${LANG_ENGLISH} "File type association"
LangString FileAssociationSG ${LANG_ITALIAN} "Associa tipi di file"

;Section "Visual Studio Runtime"
;  SetOutPath "$INSTDIR"
;  SetOverwrite on
;  File "installer\VC_redist.x86.exe"
;  ExecWait "$INSTDIR\VC_redist.x86.exe /install /passive /norestart"
;  Delete "$INSTDIR\VC_redist.x86.exe"
;SectionEnd

Section $(SongpressSectionNameLS) SongpressSection
  ; SetShellVarContext all
  SectionIn RO
  ; SetOutPath "$INSTDIR"
  ; SetOverwrite on
  Call DoInstallPythonAndSongpress
  SetOutPath "$INSTDIR"
  File songpress.ico

; Shortcuts
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  CreateDirectory "$SMPROGRAMS\$ICONS_GROUP"
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\Songpress.lnk" "$SongpressExe" "" "$INSTDIR\songpress.ico" 0
  !insertmacro MUI_STARTMENU_WRITE_END
SectionEnd

Section $(DesktopSectionNameLS) DesktopSection
  ; SetShellVarContext all
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  CreateShortCut "$DESKTOP\Songpress.lnk" "$SongpressExe"
  !insertmacro MUI_STARTMENU_WRITE_END
SectionEnd

Section -AdditionalIcons
  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
  nsExec::Exec "del $SMPROGRAMS\$ICONS_GROUP\Uninstall.lnk"
  CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\Uninstall.lnk" "$INSTDIR\uninst.exe"
  !insertmacro MUI_STARTMENU_WRITE_END
SectionEnd

SectionGroup $(FileAssociationSG)
Section $(CrdSectionNameLS) CrdSection
  ${registerExtension} "$PROFILE\.local\bin\songpress.exe" ".crd" "ChordPro"
  WriteRegStr HKCU "Software\Classes\ChordPro\DefaultIcon" "" "$INSTDIR\songpress.ico,0"
SectionEnd
Section $(ChoSectionNameLS) ChoSection
  ${registerExtension} "$PROFILE\.local\bin\songpress.exe" ".cho" "ChordPro"
  WriteRegStr HKCU "Software\Classes\ChordPro\DefaultIcon" "" "$INSTDIR\songpress.ico,0"
SectionEnd
Section $(ChordproSectionNameLS) ChordproSection
  ${registerExtension} "$PROFILE\.local\bin\songpress.exe" ".chordpro" "ChordPro"
  WriteRegStr HKCU "Software\Classes\ChordPro\DefaultIcon" "" "$INSTDIR\songpress.ico,0"
SectionEnd
Section $(ChoproSectionNameLS) ChoproSection
  ${registerExtension} "$PROFILE\.local\bin\songpress.exe" ".chopro" "ChordPro"
  WriteRegStr HKCU "Software\Classes\ChordPro\DefaultIcon" "" "$INSTDIR\songpress.ico,0"
SectionEnd
Section $(TabSectionNameLS) TabSection
  ${registerExtension} "$PROFILE\.local\bin\songpress.exe" ".tab" "TABChord"
  WriteRegStr HKCU "Software\Classes\TABChord\DefaultIcon" "" "$INSTDIR\songpress.ico,0"
SectionEnd
Section $(ProSectionNameLS) ProSection
  ${registerExtension} "$PROFILE\.local\bin\songpress.exe" ".pro" "PROChord"
  WriteRegStr HKCU "Software\Classes\PROChord\DefaultIcon" "" "$INSTDIR\songpress.ico,0"

  ;Notify Explorer about changes
  System::Call 'shell32::SHChangeNotify(i 0x08000000, i 0, i 0, i 0)'
SectionEnd
SectionGroupEnd


Section -Post
  WriteUninstaller "$INSTDIR\uninst.exe"
  WriteRegStr HKLM "${PRODUCT_DIR_REGKEY}" "" "$INSTDIR\songpress.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "$(^Name)"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\songpress.exe"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_WEB_SITE}"
  WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
SectionEnd


;--------------------------------
;Descriptions

  ;USE A LANGUAGE STRING IF YOU WANT YOUR DESCRIPTIONS TO BE LANGAUGE SPECIFIC

  ;Assign descriptions to sections
  LangString SongpressSectionLS ${LANG_ENGLISH} "Songpress program files"
  LangString SongpressSectionLS ${LANG_ITALIAN} "File eseguibili di Songpress"
  LangString DesktopSectionLS ${LANG_ENGLISH} "Create a shortcut on the Desktop"
  LangString DesktopSectionLS ${LANG_ITALIAN} "Crea un'icona di Songpress sul Desktop"
  LangString CrdSectionLS ${LANG_ENGLISH} "Open .crd files with Songpress"
  LangString CrdSectionLS ${LANG_ITALIAN} "Apre i file .crd con Songpress"
  LangString ChoSectionLS ${LANG_ENGLISH} "Open .cho files with Songpress"
  LangString ChoSectionLS ${LANG_ITALIAN} "Apre i file .cho con Songpress"
  LangString ChordproSectionLS ${LANG_ENGLISH} "Open .chordpro files with Songpress"
  LangString ChordproSectionLS ${LANG_ITALIAN} "Apre i file .chordpro con Songpress"
  LangString ChoproSectionLS ${LANG_ENGLISH} "Open .chopro files with Songpress"
  LangString ChoproSectionLS ${LANG_ITALIAN} "Apre i file .chopro con Songpress"
  LangString TabSectionLS ${LANG_ENGLISH} "Open .tab files with Songpress"
  LangString TabSectionLS ${LANG_ITALIAN} "Apre i file .tab con Songpress"
  LangString ProSectionLS ${LANG_ENGLISH} "Open .pro files with Songpress"
  LangString ProSectionLS ${LANG_ITALIAN} "Apre i file .pro con Songpress"

  !insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
    !insertmacro MUI_DESCRIPTION_TEXT ${SongpressSection} $(SongpressSectionLS)
    !insertmacro MUI_DESCRIPTION_TEXT ${DesktopSection} $(DesktopSectionLS)
    !insertmacro MUI_DESCRIPTION_TEXT ${CrdSection} $(CrdSectionLS)
    !insertmacro MUI_DESCRIPTION_TEXT ${ChoSection} $(ChoSectionLS)
    !insertmacro MUI_DESCRIPTION_TEXT ${ChordproSection} $(ChordproSectionLS)
    !insertmacro MUI_DESCRIPTION_TEXT ${ChoproSection} $(ChoproSectionLS)
    !insertmacro MUI_DESCRIPTION_TEXT ${TabSection} $(TabSectionLS)
    !insertmacro MUI_DESCRIPTION_TEXT ${ProSection} $(ProSectionLS)
  !insertmacro MUI_FUNCTION_DESCRIPTION_END

LangString UninstallComplete ${LANG_ENGLISH} "$(^Name) has been successfully removed from your computer."
LangString UninstallComplete ${LANG_ITALIAN} "$(^Name) è stato disinstallato con successo."

Function un.onUninstSuccess
  HideWindow
  MessageBox MB_ICONINFORMATION|MB_OK $(UninstallComplete)
FunctionEnd

LangString UninstallConfirm ${LANG_ENGLISH} "Are you sure to completely remove $(^Name)?"
LangString UninstallConfirm ${LANG_ITALIAN} "Sei sicuro di voler rimuovere $(^Name)?"

Function un.onInit
  !insertmacro MUI_UNGETLANGUAGE
  MessageBox MB_ICONQUESTION|MB_YESNO|MB_DEFBUTTON2 $(UninstallConfirm) IDYES +2
  Abort
FunctionEnd

Section Uninstall
  !insertmacro MUI_STARTMENU_GETFOLDER "Application" $ICONS_GROUP
  ; SetShellVarContext all
  Delete "$SMPROGRAMS\$ICONS_GROUP\Uninstall.lnk"
  Delete "$DESKTOP\Songpress.lnk"
  Delete "$SMPROGRAMS\$ICONS_GROUP\Songpress.lnk"
  RMDir "$SMPROGRAMS\$ICONS_GROUP"
  Delete "$INSTDIR\uninst.exe"

  Call un.DoUninstallSongpress

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "${PRODUCT_DIR_REGKEY}"
  ${unregisterExtension} ".crd" "ChordPro"
  ${unregisterExtension} ".cho" "ChordPro"
  ${unregisterExtension} ".chordpro" "ChordPro"
  ${unregisterExtension} ".chopro" "ChordPro"
  ${unregisterExtension} ".tab" "TABChord"
  ${unregisterExtension} ".tab" "PROChord"

  ;Notify Explorer about changes
  System::Call 'shell32::SHChangeNotify(i 0x08000000, i 0, i 0, i 0)'

  SetAutoClose true
SectionEnd